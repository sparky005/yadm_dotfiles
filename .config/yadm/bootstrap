#!/usr/bin/env bash
# A WIP installer script
# some ideas from https://www.codyhiar.com/snippets/mac-setup-script
# TODO: oh-my-zsh install and setup
# TODO: unify .zshrcs from work and here
# TODO: install todoist and befocused from app store

# probably i will just use a smaller, minimal script to install brew, yadm, and clone the dotfiles
# and then call this script as bootstrap

# Check for Homebrew,
# Install if we don't have it
if test ! $(which brew); then
  echo "Installing homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

brew doctor
brew update

binaries=(
  asdf
  bat
  cocoapods
  gatsby-cli
  grep
  htop
  johanhaleby/kubetail/kubetail
  minikube
  neovim
  netlify-cli
  thefuck
  tree
  typescript
  watch
  wget
  youtube-dl
)
echo "installing binaries..."
brew install ${binaries[@]}
echo "done!"

apps=(
  alt-tab
  anki
  docker
  hyper
  xact
  android-studio
  background-music
  google-cloud-sdk
  steam
  spotify
  firefox
  dropbox
  iterm2
  slack
  swinsian
  visual-studio-code
  rectangle
  evernote
  # zoom
  google-chrome
  whatsapp
  signal
  # audacity
  # ableton
)

echo "installing apps..."
brew cask install ${apps[@]}
echo "done!"

asdf_plugins=(
  flutter
  golang
  poetry
  python
)

echo "installing asdf plugins"
for plugin in "${asdf_plugins[@]}"; do
  asdf plugin add $plugin
done
echo "done!"
echo "installing all tool versions from .tool-versions"
asdf install
echo "done!"

echo "install pynvim. required for deoplete."
pip3 install pynvim
echo "done!"

# this command assumes we already have dotfiles correctly installed
# TODO: nvim configuration instead of vanilla vim
if command -v vim >/dev/null 2>&1; then
  echo "Bootstrapping Vim"
  vim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
  echo "done!"
fi

if command -v nvim >/dev/null 2>&1; then
  echo "Bootstrapping neovim"
  nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
  echo "done!"
fi

# disable accents on long keypresses
# more info: https://apple.stackexchange.com/questions/332769/macos-disable-popup-showing-accented-characters-when-holding-down-a-key
defaults write -g ApplePressAndHoldEnabled -bool false
